name: Auto Label

on:
  pull_request_target:
    types: [opened, reopened, synchronize, edited]

permissions:
  pull-requests: write
  issues: write
  contents: read

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Capture labels (before)
        id: labels_before
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const { data } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              per_page: 100
            });
            return JSON.stringify(data.map(l => l.name));
      - name: Ensure labels exist (sync)
        uses: crazy-max/ghaction-github-labeler@v5
        with:
          yaml-file: .github/labels.yml
          skip-delete: true
      - uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler.yml
          sync-labels: true
      - name: Capture labels (after)
        id: labels_after
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const { data } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              per_page: 100
            });
            return JSON.stringify(data.map(l => l.name));
      - name: Comment if full-ci changed
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            function has(arr, name) { return Array.isArray(arr) && arr.includes(name); }
            const before = JSON.parse(String(process.env.BEFORE || '[]'));
            const after = JSON.parse(String(process.env.AFTER || '[]'));
            const had = has(before, 'full-ci');
            const hasNow = has(after, 'full-ci');
            if (had === hasNow) return; // no change
            const body = hasNow
              ? 'Full CI enabled for this PR. Running race + coverage; results will be uploaded as an artifact.'
              : 'Full CI disabled for this PR. Reverting to fast PR tests (-short) on changed packages.';
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });
          env:
            BEFORE: ${{ steps.labels_before.outputs.result }}
            AFTER: ${{ steps.labels_after.outputs.result }}
